// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  username String? @unique
  bio String?
  email String? @unique
  emailVerified DateTime?
  // this image is used for auth session
  image String?
  coverImage String?
  //profile img can large n can break session
  profileImage String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followingIds String[] @db.ObjectId
  hasNotification Boolean?

  posts Post[]
  comments Comment[]
  notifications Notification[]

}

model Post{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  likedIds String[] @db.ObjectId
  postImageUrl String?
  //referencing userId from Post model to id from user model
  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  comments Comment[]
}

model Comment{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String[] @db.ObjectId
  //referencing userId from Comment model to id from user model
  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  post Post @relation(fields: [postId],references: [id],onDelete:Cascade)

}

model Notification{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  userId String @db.ObjectId
  createdAt DateTime @default(now())

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  
}
